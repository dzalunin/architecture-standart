@startuml name='Container Diagram - Открытие депозитов'

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Пользователи
Person(newClient, "Новый клиент")
Person(existingClient, "Клиент банка")


' Внешние системы
System_Ext(telecomOperator, "Телеком оператор")
System_Ext(smsGateway, "SMS шлюз")
System_Ext(foreignCrm, "Система партнерского call-центра")

System_Boundary(b, "Банк 'Стандарт'") {
  Person(callCenterOperator, "Оператор call-центра")
  Person(backOfficeManager, "Сотрудник бэк-офиса")

  ' Интернет-банк 
  Container(internetBankFrontend, "Фронтенд интернет-банка", "ASP.NET MVC")
  Container(internetBankBackend, "Бэкенд интернет-банка", "C# .NET")
  ContainerDb(internetBankDb, "БД интернет-банка", "MS SQL")

  ' CRM (Call-центр) 
  Container(crmFrontend, "Фронтенд CRM", "React.js")
  Container(crmBackend, "Бэкенд CRM", "Spring Boot")
  ContainerDb(crmDb, "БД CRM", "PostgreSQL")

  ' Сайт 
  Container(siteFrontend, "Фронтенд сайта", "React.js")
  Container(siteBackend, "Бэкенд сайта", "PHP")
  ContainerDb(siteDb, "БД сайта", "PostgreSQL")

  ' Сервис ставок по депозитам 
  Container(rateBackend, "Сервис ставок", "Spring Boot")
  ContainerDb(rateDb, "БД ставок", "PostgreSQL")

  Container(integrationService, "Сервис интеграции", "")
  Container(ftpServer, "FTP-сервер", "Выдает файл партнёру. Доступ ограничен IP и SSL")

  ' АБС 
  Container(abs, "Монолит АБС", "Delphi")
  ContainerDb(absDb, "СУБД", "Oracle")

  ' Брокер 
  Container(messageBus, "Брокер сообщений")
}

' Внешние пользователи 
Rel(newClient, siteFrontend, "Заполняет форму депозита")
Rel(existingClient, internetBankFrontend, "Открывает депозит")

' Внутренние пользователи 
Rel(backOfficeManager, abs, "")
Rel(callCenterOperator, crmFrontend, "")

' Фронт - Бэк 
Rel(siteFrontend, siteBackend, "HTTP")
Rel(internetBankFrontend, internetBankBackend, "HTTP")
Rel(crmFrontend, crmBackend, "HTTP")

' Бэк - БД 
Rel(siteBackend, siteDb, "JDBC")
Rel(internetBankBackend, internetBankDb, "ODBC")
Rel(crmBackend, crmDb, "JPA")
Rel(rateBackend, rateDb, "JPA")
Rel(abs, absDb, "ODBC")

' Сайт интеграции 
Rel(siteBackend, rateBackend, "Получение ставок (API)")
Rel(siteBackend, crmBackend, "Передача заявок")

' Интернет банк интеграции  
Rel(internetBankBackend, rateBackend, "Получение персональных ставок")
Rel(internetBankBackend, messageBus, "Публикует заявки")

' Сервис ставок - АБС
Rel(rateBackend, abs, "Синхронизация ставок")

' CRM интеграция 
Rel(crmBackend, messageBus, "Публикует заявки")

' АБС интеграция
Rel(messageBus, abs, "Читает и обрабатывает события")
Rel(abs, smsGateway, "Отправка SMS")

' СМС
Rel(smsGateway, telecomOperator, "Отправка клиенту")
Rel_Back(newClient, telecomOperator, "Получает SMS")
Rel_Back(existingClient, telecomOperator, "Получает SMS")

Rel(rateBackend, messageBus, "Публикует событие об изменении ставки")
Rel(messageBus, crmBackend, "Передает сообщение", "Kafka Consumer")

Rel(messageBus, integrationService, "Считывает сообщения о ставках")
Rel(integrationService, ftpServer, "Выкладывает XML файл", "по XSD")
Rel(ftpServer, foreignCrm, "Скачивает файл", "ежесуточно")

@enduml